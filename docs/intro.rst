Introduction
============

Tropical cyclones are one of the more frequent natural disasters
globally. The observed record is limited, so it is difficult to
evaluate what the 'worst possible' cyclone would look like. Based on
these historic records, we can statistically 'extrapolate' the record
and use a stochastic model to generate plausible, synthetic TC events.

TCRM was borne out of a desire to explore the epistemic uncertainty
around parameterisations used in tropical cyclone hazard models. There
are a wide range of idealised radial profiles and boundary layer
models available in the literature, and the choice of profile or
boundary layer model will influence the resulting hazard (and risk)
produced the model. TCRM allows users to run with a range of profiles
or boundary layer models and evaluate the resulting differences,
within a single modelling system. Users can also implement their own
models into the code base (which can then be shared with the user
community).

Model outline
-------------

TCRM has 6 main modules to generate hazard information:
:mod:`DataProcess`, :mod:`StatInterface`, :mod:`TrackGenerator`,
:mod:`wind`, :mod:`hazard` and :mod:`database`. Supporting
:mod:`Utilities` and plotting routines (:mod:`PlotInterface`) are
included.

The :mod:`DataProcess` module reads the input track database and
extracts parameters from the data, namely intensity and location
information, speed, bearings and genesis locations. The data are
stored in text files to allow users to examine the data in another
analysis tool. There are also a number of plotting routines to display
some of the basic relationships in the data.

:mod:`StatInterface` uses the processed files generated by 
:mod:`DataProcess` to evaluate the statistical relations between
the parameters, including the means, variance and
autocorrelations on a coarse grid across the model domain. PDFs
of the initial values of parameters (initial speed, bearing and
intensity) and genesis probability are also calculated.

:mod:`TrackGenerator` is the stochastic engine of the model. This
module samples from the distributions of genesis location and
initial parameter values to start a new TC event, then steps
forward in time using the autoregressive nature of TC
behaviour. This allows users to generate thousands of random
events that share the same statistical properties as the input
track dataset.

The :mod:`wind` module calculates the maximum wind speed around each
of the synthetic TC events generated by the :mod:`TrackGenerator`. A 
2-dimensional parametric profile is used to calculate the wind
field to enable large numbers of events to be processed efficiently,
but at high spatial resolution (e.g. a grid spacing of around 2
km). Users can select from a number of radial profiles and combine
with one of three boundary layer models to incorporate asymmetries
associated with forward motion of the TC vortex.

:mod:`hazard` uses the wind fields calculated in the :mod:`wind`
module to fit a generalised extreme value (GEV) distribution at
each grid point across the model domain to determine return
period wind speeds. The fitting routine uses the method of
L-moments [#]_ to determine the location, shape and scale
parameters of the GEV.

The :mod:`database` module builds a SQLite database that holds
information about the simulation. The wind speeds associated with all
events in the simulation catalouge are extracted for locations in the
model domain, along with recurrence interval wind speeds. Details
(maximum wind, minimun central pressure, lifetime, etc.) of each storm
are recorded, as well as the closest distance of approach for storms
to locations.



Software
--------

The software is made available as an open-source package. Users can
add new components to the model and are encouraged to submit them back
to the project. Where possible, the code has been modularised to ease
the process of adding new methods (such as radial profiles or boundary
layer models). 

References
----------

.. [#] Hosking, J. R. M. (1990): L-moments: Analysis and Estimation of
       Distributions using Linear Combinations of Order
       Statistics. *Journal of the Royal Statistical Society*, **52**,
       105--124.
